{"version":3,"file":"static/js/48.5cf5e1de.chunk.js","mappings":"qNACA,EAAwB,sBAAxB,EAAqD,qBAArD,EAAiF,qBAAjF,EAA8G,sBAA9G,EAA0I,oB,SCIpIA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAEH,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,IAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGER,GAAW,IACXW,EAAAA,EAAAA,IAAcH,GACXI,MAAK,SAAAC,GACJjB,EAAgBiB,EACjB,IACAC,OAAM,SAAAjB,GACLC,EAAS,gBAAD,OAAiBD,EAAjB,UACT,IACAkB,QAAQf,GAAW,GAXN,CAenB,GAAE,CAACQ,IAiBJ,OACE,+BACE,6BACE,iBAAKQ,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qBACA,kBAAMC,SAfG,SAAAC,GACfA,EAAEC,iBACuB,KAArBnB,EAAUoB,QACZC,MAAM,wBAEJrB,GACFI,EAAgB,CAAEG,MAAM,GAAD,OAAKP,IAE/B,EAOiCe,UAAWC,EAArC,WACE,kBACED,UAAWC,EACXM,KAAK,OACLC,MAAOvB,EACPwB,KAAK,OACLC,SA1BS,SAAAP,GACnB,IAAQK,EAAUL,EAAEQ,cAAZH,MACRtB,EAAasB,EACd,EAwBWI,YAAY,8BACZC,aAAa,MACbC,WAAS,KAEX,mBAAQd,UAAWC,EAASM,KAAK,kBAGrC,UAAC,EAAAQ,SAAD,CAAUC,UAAU,uCAApB,UACGjC,IAAW,uCACXJ,EAAasC,OAAS,IACrB,SAAC1C,EAAD,CAAM2C,OAAQvC,EAAcwC,MAAO,CAAEC,KAAM9B,EAAS+B,eAGvDxC,IAAS,yBAAuBA,QAIxC,C","sources":["webpack://reactHW5movies/./src/pages/search/search.module.css?9162","pages/search/search.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"search_title__kpGJq\",\"flex\":\"search_flex__1WQ5m\",\"form\":\"search_form__j65Hf\",\"input\":\"search_input__xTTqk\",\"btn\":\"search_btn__MaPLA\"};","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense, lazy } from 'react';\nimport { apiTMDbSearch } from '../../TMBD/API';\nimport css from './search.module.css';\n\nconst List = lazy(() => import('components/moviesList/moviesList'));\n\nexport default function Search() {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [queryForm, setQueryForm] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchTMBd = () => {\n      setLoading(true);\n      apiTMDbSearch(query)\n        .then(res => {\n          setSearchMovies(res);\n        })\n        .catch(error => {\n          setError(`UPS, this is ${error}Search`);\n        })\n        .finally(setLoading(false));\n    };\n\n    fetchTMBd();\n  }, [query]);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setQueryForm(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (queryForm.trim() === '') {\n      alert('Enter the film title');\n    }\n    if (queryForm) {\n      setSearchParams({ query: `${queryForm}` });\n    }\n  };\n\n  return (\n    <>\n      <main>\n        <div className={css.flex}>\n          <h2 className={css.title}>Search</h2>\n          <form onSubmit={onSubmit} className={css.form}>\n            <input\n              className={css.input}\n              type=\"text\"\n              value={queryForm}\n              name=\"page\"\n              onChange={handleChange}\n              placeholder=\"enter your request, please.\"\n              autoComplete=\"off\"\n              autoFocus\n            />\n            <button className={css.btn} type=\"submit\"></button>\n          </form>\n        </div>\n        <Suspense fallback={<h3>LOADING...</h3>}>\n          {loading && <h3>LOADING...</h3>}\n          {searchMovies.length > 0 && (\n            <List movies={searchMovies} state={{ from: location.pathname }} />\n          )}\n        </Suspense>\n        {error && <div>{('error_Search', error)}</div>}\n      </main>\n    </>\n  );\n}\n// import { List } from 'components/moviesList/moviesList';\n"],"names":["List","lazy","Search","useState","searchMovies","setSearchMovies","error","setError","loading","setLoading","queryForm","setQueryForm","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","apiTMDbSearch","then","res","catch","finally","className","css","onSubmit","e","preventDefault","trim","alert","type","value","name","onChange","currentTarget","placeholder","autoComplete","autoFocus","Suspense","fallback","length","movies","state","from","pathname"],"sourceRoot":""}