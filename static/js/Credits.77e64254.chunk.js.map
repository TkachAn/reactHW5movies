{"version":3,"file":"static/js/Credits.77e64254.chunk.js","mappings":"4MACA,GAAgB,SAAW,yBAAyB,KAAO,qBAAqB,IAAM,oBAAoB,KAAO,qBAAqB,IAAM,qB,SCI7H,SAASA,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,GAAKC,EAAAA,EAAAA,MAAYC,QAmBvB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKH,EAAL,CAaIA,IAXFD,GAAW,IACXK,EAAAA,EAAAA,IAAeJ,GACZK,MAAK,SAAAC,GACJX,EAAYW,EACb,IACAC,OAAM,SAAAX,GACLC,EAAS,gBAAD,OAAiBD,GAC1B,IACAY,QAAQT,GAAW,IAVT,CAgBhB,GAAE,CAACC,KAEF,gCACGF,GAAW,aACXF,IAAS,yBAAMA,KAChB,eAAIa,UAAWC,EAAAA,SAAf,SACGhB,EAASiB,KAAI,SAAAC,GACZ,OACE,gBAAsBH,UAAWC,EAAAA,SAAjC,WACE,gBAAKD,UAAWC,EAAAA,KAAhB,SACGE,EAASC,cACR,gBACEJ,UAAWC,EAAAA,IACXI,IAAG,yCAAoCF,EAASC,cAChDE,IAAG,UAAKH,EAASI,KAAd,gBAGL,gBAAKF,IAAI,sCAAsCC,IAAI,QAIvD,iBAAKN,UAAWC,EAAAA,KAAhB,WACE,eAAID,UAAWC,EAAAA,IAAf,SAAyBE,EAASI,QAClC,uCAAeJ,EAASK,kBAfnBL,EAASZ,GAmBrB,QAIR,C","sources":["webpack://reactHW5movies/./src/pages/details/credits/credit.module.css?8d5b","pages/details/credits/credits.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"credit_castList__0H9qo\",\"tumb\":\"credit_tumb__S47aQ\",\"img\":\"credit_img__Yoj2y\",\"text\":\"credit_text__hT+1q\",\"h41\":\"credit_h41__dj8ll\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { apiTMDbCredits } from '../../../TMBD/API';\n\nimport css from './credit.module.css';\nexport default function Credits() {\n  const [castList, setCastList] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const id = useParams().details;\n  useEffect(() => {\n    if (!id) return;\n    const fetchTMBd = () => {\n      setLoading(true);\n      apiTMDbCredits(id)\n        .then(res => {\n          setCastList(res);\n        })\n        .catch(error => {\n          setError(`UPS, this is ${error}`);\n        })\n        .finally(setLoading(false));\n    };\n\n    if (id) {\n      fetchTMBd();\n    }\n  }, [id]);\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <ul className={css.castList}>\n        {castList.map(castItem => {\n          return (\n            <li key={castItem.id} className={css.castItem}>\n              <div className={css.tumb}>\n                {castItem.profile_path ? (\n                  <img\n                    className={css.img}\n                    src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n                    alt={`${castItem.name} portrait`}\n                  />\n                ) : (\n                  <img src=\"https://via.placeholder.com/300x450\" alt=\"\" />\n                )}\n              </div>\n\n              <div className={css.text}>\n                <h4 className={css.h41}>{castItem.name}</h4>\n                <p>Character: {castItem.character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"names":["Credits","useState","castList","setCastList","error","setError","loading","setLoading","id","useParams","details","useEffect","apiTMDbCredits","then","res","catch","finally","className","css","map","castItem","profile_path","src","alt","name","character"],"sourceRoot":""}