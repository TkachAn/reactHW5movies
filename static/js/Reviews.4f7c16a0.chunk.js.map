{"version":3,"file":"static/js/Reviews.4f7c16a0.chunk.js","mappings":"0SAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAES,sBAFTA,EAOY,gBAPZA,EASU,SATVA,EAUU,WAVVA,EAWU,WAIHC,EAAY,mCAAG,oGACRH,IAAAA,IAAA,UACbE,EADa,oBACqBD,EADrB,sCADQ,cACpBG,EADoB,yBAInBA,EAAIC,KAAKC,SAJU,2CAAH,qDAOZC,EAAa,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACTT,IAAAA,IAAA,UACbE,EADa,oBACwBD,EADxB,kBACyCO,EADzC,iBACuDC,EADvD,wCADS,cACrBL,EADqB,yBAIpBA,EAAIC,KAAKC,SAJW,2CAAH,sDAObI,EAAc,mCAAG,WAAMC,GAAN,uFACVX,IAAAA,IAAA,UACbE,EADa,YACcS,EADd,oBAC4BV,EAD5B,wCADU,cACtBG,EADsB,yBAIrBA,EAAIC,MAJiB,2CAAH,sDAOdO,EAAc,mCAAG,WAAMD,GAAN,uFACVX,IAAAA,IAAA,iBACNW,GADM,OACDT,EADC,oBACkCD,EADlC,wCADU,cACtBG,EADsB,yBAKrBA,EAAIC,KAAKQ,MALY,2CAAH,sDAQdC,EAAc,mCAAG,WAAOH,GAAP,4FAAWF,EAAX,+BAAkB,EAAlB,SACVT,IAAAA,IAAA,iBACNW,GADM,OACDT,EADC,oBACkCD,EADlC,oDACqFQ,IAF3E,cACtBL,EADsB,yBAKrBA,EAAIC,KAAKC,SALY,2CAAH,qD,8GChD3B,EAAuB,sBAAvB,EAAmD,qBAAnD,EAA6E,oB,SCI9D,SAASS,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMX,GAAKY,EAAAA,EAAAA,MAAYC,QAoBvB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKd,EAAL,CAaIA,IAXFW,GAAW,IACXR,EAAAA,EAAAA,IAAeH,GACZe,MAAK,SAAAtB,GACJc,EAAcd,EACf,IACAuB,OAAM,SAAAR,GACLC,EAAS,gBAAD,OAAiBD,GAC1B,IACAS,QAAQN,GAAW,IAVT,CAgBhB,GAAE,CAACX,KAGF,gCACGU,IAAW,eAAIQ,UAAWC,EAAf,wBACXX,IAAS,yBAAMA,IAEfF,EAAWc,QACV,wBACGd,EAAWe,KAAI,SAAAC,GACd,OACE,2BACE,gBAAIJ,UAAWC,EAAf,oBAAgCG,EAAOC,WACvC,cAAGL,UAAWC,EAAd,SAAyBG,EAAOE,YAFzBF,EAAOtB,GAKnB,OAGH,eAAIkB,UAAWC,EAAf,wCAIP,C","sources":["TMBD/API.js","webpack://reactHW5movies/./src/pages/details/reviews/reviews.module.css?28c1","pages/details/reviews/reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8938dc969e4885481c1163e17374d0f';\n\nconst END_POINTS = {\n  trendMovWeek: '/trending/movie/week',\n  trendMovDay: '/trending/movie/day',\n  trendAllWeek: '/trending/all/week',\n  trendAllDay: '/trending/all/day',\n  trendTvWeek: '/trending/tv/week',\n  trendTvDay: '/trending/tv/day',\n  queryMovSearch: '/search/movie',\n  queryTvSearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n  queryPerson: '/search/person',\n};\n\nexport const apiTMDbTrend = async () => {\n  const res = await axios.get(\n    `${END_POINTS.trendMovDay}?api_key=${API_KEY}&append_to_response=videos,images`\n  );\n  return res.data.results;\n};\n\nexport const apiTMDbSearch = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.queryMovSearch}?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const apiTMDbDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const apiTMDbCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n\n  return res.data.cast;\n};\n\nexport const apiTMDbReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&include_adult=false&page=${page}`\n  );\n\n  return res.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"reviews_text__EPtFH\",\"h41\":\"reviews_h41__usE+U\",\"h3\":\"reviews_h3__INDaI\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { apiTMDbReviews } from '../../../TMBD/API';\nimport css from './reviews.module.css';\n\nexport default function Reviews() {\n  const [reviewList, setReviewList] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const id = useParams().details;\n  useEffect(() => {\n    if (!id) return;\n    const fetchTMBd = () => {\n      setLoading(true);\n      apiTMDbReviews(id)\n        .then(res => {\n          setReviewList(res);\n        })\n        .catch(error => {\n          setError(`UPS, this is ${error}`);\n        })\n        .finally(setLoading(false));\n    };\n\n    if (id) {\n      fetchTMBd();\n    }\n  }, [id]);\n\n  return (\n    <>\n      {loading && <h3 className={css.h3}>LOADING...</h3>}\n      {error && <div>{error}</div>}\n\n      {reviewList.length ? (\n        <ul>\n          {reviewList.map(review => {\n            return (\n              <li key={review.id}>\n                <h4 className={css.h41}>Author:{review.author}</h4>\n                <p className={css.text}>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h3 className={css.h3}>There are no reviews yet</h3>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","END_POINTS","apiTMDbTrend","res","data","results","apiTMDbSearch","query","page","apiTMDbDetails","id","apiTMDbCredits","cast","apiTMDbReviews","Reviews","useState","reviewList","setReviewList","error","setError","loading","setLoading","useParams","details","useEffect","then","catch","finally","className","css","length","map","review","author","content"],"sourceRoot":""}